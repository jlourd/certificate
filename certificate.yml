---
- name: Manage certificates using getcert and HashiCorp Vault
  hosts: localhost
  gather_facts: no
  vars_files:
    - vars/cert_subjects.yml  # Contains the list of cert subjects with SANs

  tasks:
    - name: Retrieve stored certificates from Vault (if any)
      uri:
        url: "{{ vault_address }}/v1/{{ vault_cert_path }}"
        method: GET
        headers:
          "X-Vault-Token": "{{ vault_token }}"
        return_content: yes
      register: retrieved_certs
      ignore_errors: yes

    - name: Set fact for existing certs
      set_fact:
        existing_certs: "{{ retrieved_certs.json.data if retrieved_certs.status == 200 else {} }}"

    - name: Check for missing or expired certificates
      set_fact:
        missing_or_expired_certs: "{{ missing_or_expired_certs | default([]) + [item.subject] }}"
      with_items: "{{ cert_subjects }}"
      when: existing_certs[item.subject] is not defined or
            (
              existing_certs[item.subject].cert is defined and
              existing_certs[item.subject].cert | b64decode | openssl_x509 -noout -checkend 0 | failed
            )

    - name: Generate new certificates using getcert (only for missing or expired certs)
      shell: |
        getcert request -f /tmp/{{ item }}.crt -k /tmp/{{ item }}.key -N CN={{ item }} -D {{ (cert_subjects | selectattr('subject', 'equalto', item) | first).subject_alt_name }}
        cat /tmp/{{ item }}.crt /tmp/{{ item }}.key
      register: new_cert_output
      with_items: "{{ missing_or_expired_certs }}"
      when: missing_or_expired_certs | length > 0

    - name: Prepare data for storing new certificates
      set_fact:
        certs_data: "{{ certs_data | combine({item: {'cert': new_cert_output.results[item_index].stdout_lines[0], 'key': new_cert_output.results[item_index].stdout_lines[1]}}) }}"
      with_items: "{{ missing_or_expired_certs }}"
      loop_control:
        index_var: item_index
      when: new_cert_output is defined and new_cert_output.changed

    - name: Combine existing certificates with newly generated ones
      set_fact:
        combined_certs: "{{ existing_certs | combine(certs_data, recursive=True) }}"
      when: certs_data is defined

    - name: Store the certificates in Vault (combined data)
      uri:
        url: "{{ vault_address }}/v1/{{ vault_cert_path }}"
        method: POST
        headers:
          "X-Vault-Token": "{{ vault_token }}"
          "Content-Type": "application/json"
        body_format: json
        body:
          data: "{{ combined_certs }}"
      when: combined_certs is defined
